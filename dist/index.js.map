{"version":3,"sources":["Router.ts","components/Component.ts","components/Template.ts","components/Home.ts","Store.ts","index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["class Router {\r\n  pages: any;\r\n  template: any;\r\n  templateInstance: any;\r\n\r\n  constructor(pagesSetup: any) {\r\n    this.pages = pagesSetup.pages;\r\n    this.template = pagesSetup.template;\r\n  }\r\n\r\n  public goTo(pageName: string, store) {\r\n    if (!this.templateInstance) {\r\n      this.templateInstance = new this.template(store);\r\n    }\r\n    this.templateInstance.setCurrentPage(this.pages[pageName]);\r\n    this.render();\r\n  }\r\n\r\n  public render() {\r\n    this.templateInstance._beforeRender();\r\n    this.templateInstance._render();\r\n    this.templateInstance._apiCalls();\r\n    this.templateInstance._afterRender();\r\n  }\r\n}\r\n\r\nexport { Router };\r\n","abstract class Component {\r\n  redirectTo: any;\r\n  setState: any;\r\n  store: any;\r\n  lastUpdateId: number;\r\n  getStateUpdateId: any;\r\n  _components: any;\r\n  name: any;\r\n  _varPropsHaveUpdated: boolean;\r\n  getState: any;\r\n\r\n  constructor(store: any) {\r\n    this.store = store;\r\n    this.getState = store.getState();\r\n    this.redirectTo = store.getRedirect();\r\n    this.setState = store.setState();\r\n    this.getStateUpdateId = store.getStateUpdateId();\r\n\r\n    this._components = {};\r\n    if (!this.name) this.name = Math.random();\r\n  }\r\n\r\n  _props = [];\r\n  props = [];\r\n  components = {};\r\n  beforeRender() {}\r\n  render() {\r\n    return \"\";\r\n  }\r\n  apiCalls() {}\r\n  afterRender() {}\r\n\r\n  useComponent(componentName: string) {\r\n    return this._components[componentName]._render();\r\n  }\r\n\r\n  _setComponents() {\r\n    if (this.components) {\r\n      const temp_components = {};\r\n\r\n      Object.keys(this.components).forEach(componentName => {\r\n        if (componentName in this._components) {\r\n          temp_components[componentName] = this._components[componentName];\r\n        } else {\r\n          temp_components[componentName] = this._createComponent(componentName);\r\n        }\r\n      });\r\n      this._components = temp_components;\r\n    }\r\n  }\r\n\r\n  _getComponentsList() {\r\n    return Object.values(this._components);\r\n  }\r\n\r\n  _createComponent(componentName: string) {\r\n    return new this.components[componentName](this.store);\r\n  }\r\n\r\n  _parseProps() {\r\n    this._props = [];\r\n    this.props.forEach(prop => {\r\n      this._props[prop] = this.getState(prop);\r\n    });\r\n  }\r\n\r\n  getProp(name) {\r\n    return this._props[name];\r\n  }\r\n\r\n  _setPropsHaveUpdated() {\r\n    this._varPropsHaveUpdated = this._checkIfPropsHaveUpdated();\r\n  }\r\n\r\n  _checkIfPropsHaveUpdated() {\r\n    for (const prop of this.props) {\r\n      if (this.getProp(prop) !== this.getState(prop)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _propsHaveUpdated() {\r\n    return this._varPropsHaveUpdated;\r\n  }\r\n\r\n  _wasShowing() {\r\n    if (this.lastUpdateId === this.getStateUpdateId() - 1) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  setLastUpdateId() {\r\n    this.lastUpdateId = this.getStateUpdateId();\r\n  }\r\n\r\n  _beforeRender() {\r\n    this._setPropsHaveUpdated();\r\n\r\n    if (!this._wasShowing() || this._propsHaveUpdated()) {\r\n      this.beforeRender();\r\n      this._setComponents();\r\n      this._parseProps();\r\n    }\r\n\r\n    this._beforeRenderComponents();\r\n  }\r\n\r\n  _beforeRenderComponents() {\r\n    this._getComponentsList().forEach((component: Component) => {\r\n      component._beforeRender();\r\n    });\r\n  }\r\n\r\n  _render() {\r\n    this._renderComponents();\r\n    if (!this._wasShowing() || this._propsHaveUpdated()) {\r\n      return this._updateHTML();\r\n    }\r\n  }\r\n\r\n  _updateHTML() {\r\n    const component = document.getElementById(`_${this.name}`);\r\n    const componentHTML = this.render();\r\n    if (component) {\r\n      component.innerHTML = componentHTML;\r\n    }\r\n    return `<div id=\"_${this.name}\">\r\n                ${componentHTML}\r\n              </div>`;\r\n  }\r\n\r\n  _renderComponents() {\r\n    this._getComponentsList().forEach((component: Component) => {\r\n      if (component._propsHaveUpdated()) {\r\n        component._render();\r\n      }\r\n    });\r\n  }\r\n\r\n  _apiCalls() {\r\n    if (!this._wasShowing()) {\r\n      this.apiCalls();\r\n    }\r\n    this._apiCallsComponents();\r\n  }\r\n\r\n  _apiCallsComponents() {\r\n    this._getComponentsList().forEach((component: Component) => {\r\n      component._apiCalls();\r\n    });\r\n  }\r\n\r\n  _afterRender() {\r\n    if (!this._wasShowing() || this._propsHaveUpdated()) {\r\n      this.afterRender();\r\n    }\r\n    this._afterRenderComponents();\r\n    this.setLastUpdateId();\r\n  }\r\n\r\n  _afterRenderComponents() {\r\n    this._getComponentsList().forEach((component: Component) => {\r\n      component._afterRender();\r\n    });\r\n  }\r\n}\r\n\r\nexport { Component };\r\n","import { Component } from \"../components/Component\";\r\n\r\nclass Template extends Component {\r\n  Page: Component;\r\n  name = \"app\";\r\n\r\n  setCurrentPage(Page: Component) {\r\n    this.Page = Page;\r\n    this.components = {};\r\n    this.components[`${this.Page.name}`] = this.Page;\r\n  }\r\n\r\n  props = [\"currentPage\"];\r\n\r\n  render() {\r\n    return `\r\n          ${this.useComponent(`${this.Page.name}`)}\r\n      `;\r\n  }\r\n}\r\n\r\nexport { Template };\r\n","import { Component } from \"../components/Component\";\r\n\r\nclass Home extends Component {\r\n  name = \"home\";\r\n\r\n  render() {\r\n    return `\r\n            <div class=\"home\">\r\n                <h1>Hello World!</h1>\r\n            </div>\r\n            `;\r\n  }\r\n}\r\n\r\nexport { Home };\r\n","class Store {\r\n  private stateUpdateId: number;\r\n  state = {\r\n    currentPage: \"\"\r\n  };\r\n\r\n  constructor(private router: any) {\r\n    this.stateUpdateId = 1;\r\n  }\r\n\r\n  getState() {\r\n    return prop => this.state[prop];\r\n  }\r\n\r\n  getStateUpdateId() {\r\n    return () => this.stateUpdateId;\r\n  }\r\n\r\n  getRedirect() {\r\n    return (pageName: any) => {\r\n      this.setState()({ currentPage: pageName });\r\n    };\r\n  }\r\n\r\n  public setState() {\r\n    return (newState: any) => {\r\n      this.state = { ...this.state, ...newState };\r\n      this.stateUpdateId++;\r\n      this.router.goTo(this.state.currentPage, this);\r\n    };\r\n  }\r\n}\r\n\r\nexport { Store };\r\n","import { Router } from \"./Router\";\r\nimport { Template } from \"./components/Template\";\r\nimport { Home } from \"./components/Home\";\r\nimport { Store } from \"./Store\";\r\n\r\nnavigator.serviceWorker.register(\"./sw.js\");\r\n\r\nconst pagesSetup = {\r\n  pages: {\r\n    home: Home\r\n  },\r\n  template: Template\r\n};\r\n\r\nconst router = new Router(pagesSetup);\r\n\r\nconst state = {\r\n  currentPage: \"home\"\r\n};\r\n\r\nconst store = new Store(router);\r\nstore.setState()(state);\r\n"]}